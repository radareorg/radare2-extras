#!/bin/sh
CWD=$(dirname $0)
OLD=$PWD
cd $CWD
if [ ! -d venv ]; then
    if command -v termux-setup-storage; then
        printf "\033[1;33mTermux environment detected. Installing necessary packages...\033[0m"

        pkg update && pkg upgrade -y
        # unicorn Required for unicorn during angr installation
        pkg install -y cmake binutils build-essential ninja clang python-numpy unicorn python-cryptography
        python3 -m venv --system-site-packages venv           # For packages like numpy
    else
        python3 -m venv venv
    fi
fi
. venv/bin/activate
if [ ! -x venv/bin/angr ]; then
    if command -v termux-setup-storage; then
        pip install setuptools
        # for latest cmake 4.1 issue on termux
        curl -fSL https://files.pythonhosted.org/packages/64/c7/1a571a06adda2a9802e21d84398c5547761cb28b22f59a2c5db62bf23887/unicorn-2.0.1.post1.tar.gz -o unicorn-2.0.1.post1.tar.gz
        tar -xvf unicorn-2.0.1.post1.tar.gz
        sed -i 's/cmake_minimum_required(VERSION 3.1)/cmake_minimum_required(VERSION 3.5)/g' unicorn-2.0.1.post1/src/CMakeLists.txt
        pip install -v unicorn-2.0.1.post1/

        if [ -d $CWD/unicorn-2.0.1.post1/ ]; then
            rm -rf $CWD/unicorn-2.0.1.post1/
            rm $CWD/unicorn-2.0.1.post1.tar.gz
        fi
        if [ -z "$(pip show z3-solver)" ]; then
          # Because z3-solver from pip tries to force install custom cmake
          # which breaks installation of z3-solver, check https://github.com/Z3Prover/z3/issues/7424
          # Yes I know we could use solution(s) mentioned from this issue https://github.com/termux/termux-packages/issues/10065 but
          # Because that's a bit lengthy and I don't want to (I'm lazy :P)
          # And in that too we need to install cmake from source
          # So I'm just going to install z3 from source :)
          git clone https://github.com/Z3Prover/z3.git -b z3-4.13.4 --depth 1
          cd $CWD/z3
          printf "\033[1;33m Starting z3 build, it may take a while...\033[0m"
          python scripts/mk_make.py --python
          cd build
          make -j $(nproc)
          make install
          cd ../../
  
          # Now we don't need z3 source anymore
          if [ -d $CWD/z3 ]; then
              rm -rf $CWD/z3
          fi
        fi
        DIST_INFO_PATH="$CWD/venv/lib/python3.12/site-packages/z3_solver-4.13.0.0.dist-info"
        mkdir -p $DIST_INFO_PATH
        touch $DIST_INFO_PATH/RECORD
        echo "z3" >$DIST_INFO_PATH/top_level.txt
        echo "z3_solver" >$DIST_INFO_PATH/WHEEL
        echo "pip" >$DIST_INFO_PATH/INSTALLER

        cat <<EOL >$DIST_INFO_PATH/METADATA
Metadata-Version: 2.1
Name: z3-solver
Version: 4.13.0.0
Summary: An efficient SMT solver library
Home-page: https://github.com/Z3Prover/z3
Author: The Z3 Theorem Prover Project
Maintainer: Audrey Dutcher and Nikolaj Bjorner
Maintainer-email: audrey@rhelmot.io
License: MIT License
Keywords: z3,smt,sat,prover,theorem
Requires-Dist: importlib-resources ; python_version < "3.9"

Z3 is a theorem prover from Microsoft Research with support for bitvectors, booleans, arrays, floating point numbers, strings, and other data types.

For documentation, please read http://z3prover.github.io/api/html/z3.html

In the event of technical difficulties related to configuration, compilation, or installation, please submit issues to https://github.com/z3prover/z3.git
EOL
      # this is due to python forcebly downloading pypi cmake for pypcode
      # which isnt compatible with building inside termux
      git clone https://github.com/angr/pypcode.git -b v3.0.3 --depth 1
      sed -i -E 's/("cmake" ]|"cmake"])/ ]/g' pypcode/pyproject.toml
      pip install -v pypcode/
      pip install -v pyvex==9.2.154
      pip install -v angr==9.2.154 --no-build-isolation
    fi
    pip install -v angr==9.2.154
    pip install capstone==5.0.3
fi
cd $OLD
angr $@
